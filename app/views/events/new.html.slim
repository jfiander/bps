h2 = "#{@edit_mode} #{@event_title}"

= form_for(@event, url: @submit_path, multipart: true) do |f|
  = f.hidden_field :id if @submit_path.match /\/update/

  #new-event
    .left = f.label :event_type_id, "#{@event_title} name"
    .right = f.select :event_type_id, options_for_select(@event_types, @event.event_type_id), include_blank: true, prompt: "Please select a #{params[:type]} type", required: true
    br.clear

    .left = f.label :description
    .right = f.text_area :description
    br.clear

    - if params[:type].in? [:course, :seminar]
      .left = f.label :requirements, "Student requirements"
      .right 
        = f.text_area :requirements
        small e.g. A computer to run navigation software; a calculator; etc.
      br.clear

      .left = label_tag :topics, "Course topics"
      .right
        = text_area_tag :topics, @course_topics, class: "bulletted"
        small Put each topic on a separate line.
      br.clear

      .left = label_tag :includes, "Course materials"
      .right
        = text_area_tag :includes, @course_includes, class: "bulletted"
        small Put each item on a separate line.
      br.clear

      .left = f.label :prereq_id, "Prerequisite course"
      .right = f.select :prereq_id, options_for_select(@event_types, @event.prereq_id), include_blank: true, prompt: "Please select a prerequisite course, if applicable"
      br.clear


    .left
      = f.label :flyer
      ul
        li An image will display a thumbnail next to the description.
        li A PDF will display in a box under all other information.
    .right
      = fa_icon("file-pdf-o", class: "file-type")
      = fa_icon("file-image-o", class: "file-type")
      = f.file_field :flyer
      br
      - if @event.get_flyer&.downcase&.match(/\.pdf$/)
        iframe src=(@event.get_flyer) width="100"
      - elsif @event.get_flyer&.downcase&.match(/\.(jpe?g|png)$/)
        = image_tag @event.get_flyer, width: 100
    br.clear

    hr

    - if params[:type].in? [:course, :seminar]
      .left
        = label_tag :instructors, "Instructor(s)"
        ul
          li Enter the full name of each instructor without rank or grade.
          li You can also put a slash followed by their certificate number.
          li.red Invalid instructors will not be saved.
      .right
        = text_area_tag :instructors, @instructors, class: "bulletted"
        small Put each name on a separate line.
      br.clear

      hr

    .left = f.label :location
    .right = f.text_area :location, class: "location"
    br.clear

    .left = f.label :map_link
    .right = f.text_field :map_link, class: "map-link", placeholder: "https://maps.google.com/..."
    br.clear

    hr

    .left = f.label :cost, "Cost"
    .right
      = fa_icon("usd")
      = f.number_field :cost, class: "number", min: 0, placeholder: "0.00"
    br.clear

    .left = f.label :member_cost, "Member discounted cost"
    .right
      = fa_icon("usd")
      = f.number_field :member_cost, class: "number", min: 0, placeholder: "0.00"
      small Only enter if applicable
    br.clear

    .left = f.label :allow_member_registrations, "Member registrations"
    .right
      label.switch
        = f.check_box :allow_member_registrations, class: "slider round"
        span.slider.round.inverse
          .description.member_registrations
    br.clear

    .left = f.label :allow_public_registrations, "Public registrations"
    .right
      label.switch
        = f.check_box :allow_public_registrations, class: "slider round"
        span.slider.round.inverse
          .description.public_registrations
    br.clear

    hr

    .left = f.label :start_at
    .right = f.datetime_select :start_at, start_year: 2017, end_year: (Time.now.year + 2), default: (0.days.from_now.beginning_of_day + 9.hours), minute_step: 15, datetime_separator: "<br/>"
    br.clear

    .left = f.label :length, "Session length"
    .right = f.time_select :length, minute_step: 15, end_hour: 8, default: {hour: 2, minute: 0}
    br.clear

    .left = f.label :sessions, "Number of sessions"
    .right = f.number_field :sessions, class: "number", min: 1, max: 100
    br.clear

    hr

    .left = f.label :expires_at, "Do not display this #{params[:type]} after", class: "red"
    .right = f.datetime_select :expires_at, start_year: 2017, end_year: (Time.now.year + 2), default: (0.days.from_now + 3.months), discard_hour: true, discard_minute: true, required: true
    br.clear

    .center
      hr
      = spinner_button(f, button_text: "#{@edit_mode} #{@event_title}", disable_text: "#{@edit_mode.sub(/e$/, '')}ing #{@event_title}")
    br.clear
