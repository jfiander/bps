h2 = "#{@edit_mode} #{@event_title}"

em
  | Fields marked with
  = fa_icon('dot-circle', style: :regular, css: 'red', shrink: 4)
  | are required.

= form_for(@event, url: @submit_path, multipart: true) do |f|
  = f.hidden_field :id if @submit_path.match /\/update/

  #new-event
    h3 General Information

    .left
      span.red = fa_icon('dot-circle', style: :regular, css: 'red', shrink: 4)
      = f.label :event_type_id, "#{@event_title} name"
    .right
      = f.select :event_type_id, options_for_select(@event_types, @event.event_type_id), {include_blank: true, prompt: "Please select #{event_type_param == 'event' ? 'an' : 'a'} #{event_type_param} type"}, required: true
      - if current_user&.permitted?(:admin, :education, strict: true)
        ul
          li = link_to(event_types_path, target: :_blank) { fa_icon('edit') + 'Manage Event Types' }
          li &nbsp;
          li = link_to(refresh_event_types_path(category: event_type_param), remote: true, class: 'green') { fa_icon('sync-alt') + 'Reload Event Types' }
    br.clear

    .left 
      = f.label :location
      ul
        li.red If you need to add a new location, do that before continuing.
        li
          | You can also save this 
          = event_type_param
          | , go create the location, then add it here later.
    .right
      - if @locations.present?
        = f.select :location_id, options_for_select(['', 'TBD'] + @locations.map { |l| [l[:name], l[:id]] }, @event.location_id), include_blank: "Please select a location", required: true
      ul
        li = link_to(locations_path, target: :_blank) { fa_icon('edit') + 'Manage Locations' }
        li &nbsp;
        li = link_to(refresh_locations_path(id: @event&.id), remote: true, class: 'green') { fa_icon('sync-alt') + 'Reload Locations' }
    br.clear

    - if event_type_param.in? %w[course seminar]
      .left = f.label :show_in_catalog, "Show in #{@event_title} Catalog"
      .right
        label.switch
          = f.check_box :show_in_catalog, class: "slider round"
          span.slider.round.blue.inverse
            .description.catalog
      br.clear

    hr

    h3 Schedule

    .left
      span.red = fa_icon('dot-circle', style: :regular, css: 'red', shrink: 4)
      = f.label :start_at
    .right = f.datetime_field :start_at, required: true
    br.clear

    .left = f.label :length, "Session length"
    .right = f.time_select :length, minute_step: 15, end_hour: 8, default: {hour: 2, minute: 0}
    br.clear

    .left = f.label :sessions, "Number of sessions"
    .right = f.number_field :sessions, class: "number", min: 1, max: 100
    br.clear

    hr

    h3 Registrations

    .left = f.label :cost, "Cost"
    .right
      = fa_icon("dollar-sign")
      = f.number_field :cost, class: "number", min: 0, placeholder: "0.00"
    br.clear

    .left
      = f.label :member_cost, "Member discounted cost"
      ul.red
        li Only enter if applicable
    .right
      = fa_icon("dollar-sign")
      = f.number_field :member_cost, class: "number", min: 0, placeholder: "0.00"
    br.clear

    .left = f.label :allow_member_registrations, "Member registrations"
    .right
      label.switch
        = f.check_box :allow_member_registrations, class: "slider round"
        span.slider.round.inverse
          .description.member_registrations
    br.clear

    .left = f.label :allow_public_registrations, "Public registrations"
    .right
      label.switch
        = f.check_box :allow_public_registrations, class: "slider round"
        span.slider.round.inverse
          .description.public_registrations
    br.clear

    .left
      span.red = fa_icon('dot-circle', style: :regular, css: 'red', shrink: 4)
      = f.label :cutoff_at, 'Do not allow registrations after', class: "red"
    .right = f.datetime_field :cutoff_at, required: true
    br.clear

    .left
      span.red = fa_icon('dot-circle', style: :regular, css: 'red', shrink: 4)
      = f.label :expires_at, "Do not display this #{event_type_param} after", class: "red"
    .right = f.datetime_field :expires_at, required: true
    br.clear

    hr

    h3 Details

    .left = f.label :description
    .right = f.text_area :description
    br.clear

    - if event_type_param.in? %w[course seminar]
      .left
        = f.label :requirements, "Student requirements"
        ul
          li.italic e.g. A computer to run navigation software; a calculator; etc.
      .right = f.text_area :requirements
      br.clear

      .left
        = label_tag :topics, "Course topics"
        ul
          li Put each topic on a separate line.
      .right = text_area_tag :topics, @course_topics, class: "bulletted"
      br.clear

      .left
        = label_tag :includes, "Course materials"
        ul
          li Put each topic on a separate line.
      .right = text_area_tag :includes, @course_includes, class: "bulletted"
      br.clear

      .left = f.label :prereq_id, "Prerequisite course"
      .right = f.select :prereq_id, options_for_select(@event_types, @event.prereq_id), include_blank: true, prompt: "Please select a prerequisite course, if applicable"
      br.clear

    .left
      = f.label :flyer
      ul
        li An image will display a thumbnail next to the description.
        li A PDF will display in a box under all other information.
    .right
      = fa_icon('file-pdf', style: :regular, css: 'file-type')
      = fa_icon('file-image', style: :regular, css: 'file-type')
      = f.file_field :flyer
      - if @event.flyer.present?
        br
        - if @event.get_flyer&.downcase&.match(/\.pdf$/)
          iframe src=(@event.get_flyer) width="100"
        - elsif @event.get_flyer&.downcase&.match(/\.(jpe?g|png)$/)
          = image_tag @event.get_flyer, width: 100
    br.clear

    - if event_type_param.in? %w[course seminar]
      .left
        = label_tag :instructors, "Instructor(s)"
        ul
          li Put each topic on a separate line.
          li &nbsp;
          li Enter the full name of each instructor without rank or grade.
          li You can also put a slash followed by their certificate number.
          li.red Invalid instructors will not be saved.
      .right = text_area_tag :instructors, @instructors, class: "bulletted"
      br.clear

    .center
      hr
      = spinner_button(f, button_text: "#{@edit_mode} #{@event_title}", disable_text: "#{@edit_mode.sub(/e$/, '')}ing #{@event_title}", css_class: 'big')
    br.clear
