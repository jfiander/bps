.events-full-width
  hr
.event-mobile-title = event_type(event).display_title
- if !defined?(@event_catalog) && @current_user_permitted_event_type && event.show_in_catalog
  .event-mobile-contents.birmingham-blue
    = FA::Icon.p('star', style: :regular)
    | In catalog
- if !defined?(@event_catalog) && @current_user_permitted_event_type && !defined?(@event_catalog) && !event.expired?
  br
- if defined?(@event_catalog)
  - if @current_user_permitted_event_type
    = link_to(send("edit_#{event_type_param}_path", event), class: "control blue-faded") do
      = FA::Icon.p('edit', fa: 'fw')
      | Edit
- else
  - if @current_user_permitted_event_type
    .event-mobile-contents = render 'events/actions', event: event
  - unless defined?(@event_catalog)
    br
    .event-mobile-contents
      - if !long_form && !event.expired? && user_signed_in? && event.allow_member_registrations
        - if @registered&.has_key?(event.id)
          = link_to(cancel_registration_path(id: @registered[event.id]), method: :delete, remote: true, class: "red control", id: "event_#{event.id}_mobile", data: {confirm: "Are you sure you want to cancel this registration?"}) do
            = FA::Icon.p('minus-square', fa: 'fw')
            | Cancel Registration
        - elsif event.registerable?
          = link_to(register_path(event_type_param, event.id), method: :put, remote: true, class: "control", id: "event_#{event.id}_mobile") do
            = FA::Icon.p('calendar-check', fa: 'fw', style: :regular)
            | Register
        - elsif !event.expired?
          = FA::Layer.p([{ name: 'calendar-check', options: { style: :regular } }, { name: 'ban', options: { style: :solid, css: :red } }])
          span.red Too late to register
- if @current_user_permitted_event_type && !defined?(@event_catalog) && !event.expired?
  br
.event-mobile-contents
  - if event.multiple_sessions?
    b Starts: 
  = event.start_at.strftime(ApplicationController::LONG_TIME_FORMAT)
- if (event.multiple_sessions? || event.length?)
  .event-mobile-contents
    - if event.multiple_sessions?
      - if event.all_day
        b = "#{event.sessions - 1} days"
      - else
        b = "#{event.sessions} sessions"
        - if event.length?
          | , 
    - if event.length? && !event.all_day
      = event.formatted_length
      - if event.multiple_sessions?
        |  each
- if event.cost.present?
  .event-mobile-contents.spaced = event.formatted_cost
- unless defined?(@event_catalog)
  .event-mobile-contents.spaced
    - if @locations[event.location_id].present?
      .event-mobile-contents = simple_format(@locations[event.location_id][:address])
      - if @locations[event.location_id][:map_link].present?
        .event-mobile-contents
          = link_to(@locations[event.location_id][:map_link], target: :_blank) do
            = FA::Icon.p("map-marker-alt")
            | Map
      - unless defined?(@event_catalog)
        - if @locations[event.location_id][:picture].present?
          = image_tag files_bucket.link(@locations[event.location_id][:picture].path(:thumb))
        - if @locations[event.location_id][:details].present?
          small = simple_format(@locations[event.location_id][:details])
    - else
      | Location TBD
.event-mobile-contents.spaced = simple_format(event.description)
- if course_topics(event).present?
  .event-mobile-contents.spaced
    b Topics include:
    ul
      - course_topics(event).each do |t|
        li = t.text
- if course_includes(event).present?
  .event-mobile-contents.spaced
    b Materials include:
    ul
      - course_includes(event).each do |i|
        li = i.text
- if event.requirements.present?
  .event-mobile-contents.spaced
    b Student requirements:
    p = simple_format(event.requirements)
- if event_instructors(event).present? && !defined?(@event_catalog)
  .event-mobile-contents.spaced
    b = "Instructor".pluralize(event_instructors(event).count) + ":"
    p = simple_format(event_instructors(event).map(&:full_name).join("\n"))
- if event_prereq(event).present?
  .event-mobile-contents.spaced
    b Prerequisite course:
    p = event_prereq(event).title.titleize
- if @current_user_permitted_event_type && !defined?(@event_catalog) && @registered_users[event.id].present?
  .event-mobile-contents.spaced
    b Registered Users:
    - @registered_users[event.id].each do |r|
      = render 'events/register/member', r: r

- if !defined?(@event_catalog) && !long_form
  - if !user_signed_in? && event.registerable? && event.allow_public_registrations
    = render 'events/register/public', event_id: event.id, mobile: true
  - elsif !user_signed_in? && event.registerable?
    = render 'events/no/public_registrations'
  - elsif !user_signed_in?
    = render 'events/no/registrations'

.event-mobile-contents.spaced
  - if event.get_flyer(@event_types).present? && event.flyer_content_type != 'application/pdf'
    = image_tag event.get_flyer(@event_types)
  - if event.get_flyer(@event_types).present? && event.flyer_content_type == 'application/pdf'
    iframe src=(event.get_flyer(@event_types))
