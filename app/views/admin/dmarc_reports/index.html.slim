h1 = admin_header('DMARC Reports')

= form_for([:admin, @new_report], multipart: true) do |f|
  = f.file_field(:xml, accept: 'application/zip,application/gzip,text/xml')
  = f.submit('Upload Report', class: 'big')

#dmarc-reports.table.striped
  .table-row.header
    .table-cell Org
    .table-cell ID
    .table-cell Begin
    .table-cell End
    .table-cell Disposition
    .table-cell DKIM
    .table-cell SPF
    .table-cell
  - @reports.each do |report|
    - proto = report.proto
    - proto.records.each_with_index do |record, index|
      .table-row
        .table-cell = proto.report_metadata.org_name if index.zero?
        .table-cell = proto.report_metadata.report_id if index.zero?
        .table-cell = DateTime.strptime(proto.report_metadata.date_range.begin.to_s, '%s').strftime(TimeHelper::MEDIUM_TIME_FORMAT) if index.zero?
        .table-cell = DateTime.strptime(proto.report_metadata.date_range.end.to_s, '%s').strftime(TimeHelper::MEDIUM_TIME_FORMAT) if index.zero?
        .table-cell class=("dmarc-disposition #{record.row.policy_evaluated.disposition.to_s.downcase}") = record.row.policy_evaluated.disposition.to_s.downcase
        .table-cell class=("dmarc-result #{record.row.policy_evaluated.dkim == 'pass' ? :pass : :fail}") = record.row.policy_evaluated.dkim
        .table-cell class=("dmarc-result #{record.row.policy_evaluated.spf == 'pass' ? :pass : :fail}") = record.row.policy_evaluated.spf
        .table-cell
          - if index.zero?
            = link_to(admin_dmarc_report_path(report), title: 'View') { FA::Icon.p('desktop', style: :duotone) }
            = link_to(admin_dmarc_report_path(report, format: :xml), title: 'XML') { FA::Icon.p('code', style: :duotone) }
            = link_to(admin_dmarc_report_path(report, format: :json), title: 'JSON') { FA::Icon.p('brackets-curly', style: :duotone) }
            = link_to(admin_dmarc_report_path(report, format: :proto), title: 'Proto') { FA::Icon.p('binary', style: :duotone) }
